-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from ParLatte.y
-----------------------------------------------------------------------------

state 65 contains 1 shift/reduce conflicts.
state 139 contains 1 shift/reduce conflicts.

rule 54 is unused
rule 55 is unused
rule 56 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident '{' ListMemberDef '}'      (6)
	TopDef -> 'class' Ident 'extends' Ident '{' ListMemberDef '}'   (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Arg -> Type Ident                                  (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	MemberDef -> Type ListItem ';'                     (14)
	MemberDef -> Type Ident '(' ListArg ')' Block      (15)
	ListMemberDef ->                                   (16)
	ListMemberDef -> ListMemberDef MemberDef           (17)
	Expr6 -> Ident '=' 'new' Ident                     (18)
	Expr6 -> '(' Type ')null'                          (19)
	Expr6 -> Expr6 '.' Ident                           (20)
	Expr6 -> Expr6 '.' Ident '(' ListExpr ')'          (21)
	Expr6 -> Ident                                     (22)
	Expr6 -> Integer                                   (23)
	Expr6 -> 'true'                                    (24)
	Expr6 -> 'false'                                   (25)
	Expr6 -> Ident '(' ListExpr ')'                    (26)
	Expr6 -> String                                    (27)
	Expr6 -> '(' Expr ')'                              (28)
	Block -> '{' ListStmt '}'                          (29)
	ListStmt ->                                        (30)
	ListStmt -> ListStmt Stmt                          (31)
	Stmt -> ';'                                        (32)
	Stmt -> Block                                      (33)
	Stmt -> Type ListItem ';'                          (34)
	Stmt -> Expr6 '=' Expr ';'                         (35)
	Stmt -> Ident '++' ';'                             (36)
	Stmt -> Ident '--' ';'                             (37)
	Stmt -> 'return' Expr ';'                          (38)
	Stmt -> 'return' ';'                               (39)
	Stmt -> 'if' '(' Expr ')' Stmt                     (40)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (41)
	Stmt -> 'while' '(' Expr ')' Stmt                  (42)
	Stmt -> Expr ';'                                   (43)
	Item -> Ident                                      (44)
	Item -> Ident '=' Expr                             (45)
	Item -> Ident '=' 'new' Ident                      (46)
	ListItem -> Item                                   (47)
	ListItem -> Item ',' ListItem                      (48)
	Type -> Ident                                      (49)
	Type -> 'int'                                      (50)
	Type -> 'string'                                   (51)
	Type -> 'boolean'                                  (52)
	Type -> 'void'                                     (53)
	ListType ->                                        (54)
	ListType -> Type                                   (55)
	ListType -> Type ',' ListType                      (56)
	Expr5 -> '-' Expr6                                 (57)
	Expr5 -> '!' Expr6                                 (58)
	Expr5 -> Expr6                                     (59)
	Expr4 -> Expr4 MulOp Expr5                         (60)
	Expr4 -> Expr5                                     (61)
	Expr3 -> Expr3 AddOp Expr4                         (62)
	Expr3 -> Expr4                                     (63)
	Expr2 -> Expr2 RelOp Expr3                         (64)
	Expr2 -> Expr3                                     (65)
	Expr1 -> Expr2 '&&' Expr1                          (66)
	Expr1 -> Expr2                                     (67)
	Expr -> Expr1 '||' Expr                            (68)
	Expr -> Expr1                                      (69)
	ListExpr ->                                        (70)
	ListExpr -> Expr                                   (71)
	ListExpr -> Expr ',' ListExpr                      (72)
	AddOp -> '+'                                       (73)
	AddOp -> '-'                                       (74)
	MulOp -> '*'                                       (75)
	MulOp -> '/'                                       (76)
	MulOp -> '%'                                       (77)
	RelOp -> '<'                                       (78)
	RelOp -> '<='                                      (79)
	RelOp -> '>'                                       (80)
	RelOp -> '>='                                      (81)
	RelOp -> '=='                                      (82)
	RelOp -> '!='                                      (83)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	')null'        { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'boolean'      { PT _ (TS _ 23) }
	'class'        { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'extends'      { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'new'          { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'true'         { PT _ (TS _ 33) }
	'void'         { PT _ (TS _ 34) }
	'while'        { PT _ (TS _ 35) }
	'{'            { PT _ (TS _ 36) }
	'||'           { PT _ (TS _ 37) }
	'}'            { PT _ (TS _ 38) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ListTopDef      rules 8, 9
	Arg             rule  10
	ListArg         rules 11, 12, 13
	MemberDef       rules 14, 15
	ListMemberDef   rules 16, 17
	Expr6           rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
	Block           rule  29
	ListStmt        rules 30, 31
	Stmt            rules 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43
	Item            rules 44, 45, 46
	ListItem        rules 47, 48
	Type            rules 49, 50, 51, 52, 53
	ListType        rules 54, 55, 56
	Expr5           rules 57, 58, 59
	Expr4           rules 60, 61
	Expr3           rules 62, 63
	Expr2           rules 64, 65
	Expr1           rules 66, 67
	Expr            rules 68, 69
	ListExpr        rules 70, 71, 72
	AddOp           rules 73, 74
	MulOp           rules 75, 76, 77
	RelOp           rules 78, 79, 80, 81, 82, 83

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	')null'        reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 49)

	L_ident        reduce using rule 49


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2
	%eof           reduce using rule 8

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 15
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 52)

	')null'        reduce using rule 52
	L_ident        reduce using rule 52


State 9

	TopDef -> 'class' . Ident '{' ListMemberDef '}'     (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident '{' ListMemberDef '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 50)

	')null'        reduce using rule 50
	L_ident        reduce using rule 50


State 11

	Type -> 'string' .                                  (rule 51)

	')null'        reduce using rule 51
	L_ident        reduce using rule 51


State 12

	Type -> 'void' .                                    (rule 53)

	')null'        reduce using rule 53
	L_ident        reduce using rule 53


State 13

	TopDef -> 'class' Ident . '{' ListMemberDef '}'     (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident '{' ListMemberDef '}'    (rule 7)

	'extends'      shift, and enter state 17
	'{'            shift, and enter state 18


State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 16


State 15

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 16

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 21
	ListArg        goto state 22
	Type           goto state 23

State 17

	TopDef -> 'class' Ident 'extends' . Ident '{' ListMemberDef '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 20

State 18

	TopDef -> 'class' Ident '{' . ListMemberDef '}'     (rule 6)

	'boolean'      reduce using rule 16
	'int'          reduce using rule 16
	'string'       reduce using rule 16
	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16

	ListMemberDef  goto state 19

State 19

	TopDef -> 'class' Ident '{' ListMemberDef . '}'     (rule 6)
	ListMemberDef -> ListMemberDef . MemberDef          (rule 17)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            shift, and enter state 30
	L_ident        shift, and enter state 2

	Ident          goto state 3
	MemberDef      goto state 28
	Type           goto state 29

State 20

	TopDef -> 'class' Ident 'extends' Ident . '{' ListMemberDef '}'    (rule 7)

	'{'            shift, and enter state 27


State 21

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 26


State 22

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 25


State 23

	Arg -> Type . Ident                                 (rule 10)

	L_ident        shift, and enter state 2

	Ident          goto state 24

State 24

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 25

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 37

	Block          goto state 36

State 26

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 21
	ListArg        goto state 35
	Type           goto state 23

State 27

	TopDef -> 'class' Ident 'extends' Ident '{' . ListMemberDef '}'    (rule 7)

	'boolean'      reduce using rule 16
	'int'          reduce using rule 16
	'string'       reduce using rule 16
	'void'         reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16

	ListMemberDef  goto state 34

State 28

	ListMemberDef -> ListMemberDef MemberDef .          (rule 17)

	'boolean'      reduce using rule 17
	'int'          reduce using rule 17
	'string'       reduce using rule 17
	'void'         reduce using rule 17
	'}'            reduce using rule 17
	L_ident        reduce using rule 17


State 29

	MemberDef -> Type . ListItem ';'                    (rule 14)
	MemberDef -> Type . Ident '(' ListArg ')' Block     (rule 15)

	L_ident        shift, and enter state 2

	Ident          goto state 31
	Item           goto state 32
	ListItem       goto state 33

State 30

	TopDef -> 'class' Ident '{' ListMemberDef '}' .     (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_ident        reduce using rule 6
	%eof           reduce using rule 6


State 31

	MemberDef -> Type Ident . '(' ListArg ')' Block     (rule 15)
	Item -> Ident .                                     (rule 44)
	Item -> Ident . '=' Expr                            (rule 45)
	Item -> Ident . '=' 'new' Ident                     (rule 46)

	'('            shift, and enter state 42
	','            reduce using rule 44
	';'            reduce using rule 44
	'='            shift, and enter state 43


State 32

	ListItem -> Item .                                  (rule 47)
	ListItem -> Item . ',' ListItem                     (rule 48)

	','            shift, and enter state 41
	';'            reduce using rule 47


State 33

	MemberDef -> Type ListItem . ';'                    (rule 14)

	';'            shift, and enter state 40


State 34

	TopDef -> 'class' Ident 'extends' Ident '{' ListMemberDef . '}'    (rule 7)
	ListMemberDef -> ListMemberDef . MemberDef          (rule 17)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            shift, and enter state 39
	L_ident        shift, and enter state 2

	Ident          goto state 3
	MemberDef      goto state 28
	Type           goto state 29

State 35

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 36

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 37

	Block -> '{' . ListStmt '}'                         (rule 29)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30

	ListStmt       goto state 38

State 38

	Block -> '{' ListStmt . '}'                         (rule 29)
	ListStmt -> ListStmt . Stmt                         (rule 31)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 71
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'if'           shift, and enter state 72
	'int'          shift, and enter state 10
	'return'       shift, and enter state 73
	'string'       shift, and enter state 11
	'true'         shift, and enter state 59
	'void'         shift, and enter state 12
	'while'        shift, and enter state 74
	'{'            shift, and enter state 37
	'}'            shift, and enter state 75
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 65
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 66
	Block          goto state 67
	Stmt           goto state 68
	Type           goto state 69
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 70

State 39

	TopDef -> 'class' Ident 'extends' Ident '{' ListMemberDef '}' .    (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_ident        reduce using rule 7
	%eof           reduce using rule 7


State 40

	MemberDef -> Type ListItem ';' .                    (rule 14)

	'boolean'      reduce using rule 14
	'int'          reduce using rule 14
	'string'       reduce using rule 14
	'void'         reduce using rule 14
	'}'            reduce using rule 14
	L_ident        reduce using rule 14


State 41

	ListItem -> Item ',' . ListItem                     (rule 48)

	L_ident        shift, and enter state 2

	Ident          goto state 63
	Item           goto state 32
	ListItem       goto state 64

State 42

	MemberDef -> Type Ident '(' . ListArg ')' Block     (rule 15)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 21
	ListArg        goto state 62
	Type           goto state 23

State 43

	Item -> Ident '=' . Expr                            (rule 45)
	Item -> Ident '=' . 'new' Ident                     (rule 46)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'new'          shift, and enter state 58
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 53

State 44

	Expr6 -> Ident . '=' 'new' Ident                    (rule 18)
	Expr6 -> Ident .                                    (rule 22)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 26)

	'!='           reduce using rule 22
	'%'            reduce using rule 22
	'&&'           reduce using rule 22
	'('            shift, and enter state 84
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'.'            reduce using rule 22
	'/'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'='            shift, and enter state 87
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'||'           reduce using rule 22


State 45

	Expr6 -> Integer .                                  (rule 23)

	'!='           reduce using rule 23
	'%'            reduce using rule 23
	'&&'           reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'.'            reduce using rule 23
	'/'            reduce using rule 23
	';'            reduce using rule 23
	'<'            reduce using rule 23
	'<='           reduce using rule 23
	'='            reduce using rule 23
	'=='           reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'||'           reduce using rule 23


State 46

	Expr6 -> String .                                   (rule 27)

	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'&&'           reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'+'            reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'.'            reduce using rule 27
	'/'            reduce using rule 27
	';'            reduce using rule 27
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'='            reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'||'           reduce using rule 27


State 47

	Expr6 -> Expr6 . '.' Ident                          (rule 20)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 21)
	Expr5 -> Expr6 .                                    (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'.'            shift, and enter state 82
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59


State 48

	Expr4 -> Expr5 .                                    (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61


State 49

	Expr4 -> Expr4 . MulOp Expr5                        (rule 60)
	Expr3 -> Expr4 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            shift, and enter state 108
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            shift, and enter state 109
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            shift, and enter state 110
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63

	MulOp          goto state 107

State 50

	Expr3 -> Expr3 . AddOp Expr4                        (rule 62)
	Expr2 -> Expr3 .                                    (rule 65)

	'!='           reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'+'            shift, and enter state 105
	','            reduce using rule 65
	'-'            shift, and enter state 106
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'||'           reduce using rule 65

	AddOp          goto state 104

State 51

	Expr2 -> Expr2 . RelOp Expr3                        (rule 64)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 66)
	Expr1 -> Expr2 .                                    (rule 67)

	'!='           shift, and enter state 97
	'&&'           shift, and enter state 98
	')'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67
	'<'            shift, and enter state 99
	'<='           shift, and enter state 100
	'=='           shift, and enter state 101
	'>'            shift, and enter state 102
	'>='           shift, and enter state 103
	'||'           reduce using rule 67

	RelOp          goto state 96

State 52

	Expr -> Expr1 . '||' Expr                           (rule 68)
	Expr -> Expr1 .                                     (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69
	'||'           shift, and enter state 95


State 53

	Item -> Ident '=' Expr .                            (rule 45)

	','            reduce using rule 45
	';'            reduce using rule 45


State 54

	Expr5 -> '!' . Expr6                                (rule 58)

	'('            shift, and enter state 55
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 94

State 55

	Expr6 -> '(' . Type ')null'                         (rule 19)
	Expr6 -> '(' . Expr ')'                             (rule 28)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'true'         shift, and enter state 59
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 91
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Type           goto state 92
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 93

State 56

	Expr5 -> '-' . Expr6                                (rule 57)

	'('            shift, and enter state 55
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 90

State 57

	Expr6 -> 'false' .                                  (rule 25)

	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'&&'           reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'.'            reduce using rule 25
	'/'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'='            reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'||'           reduce using rule 25


State 58

	Item -> Ident '=' 'new' . Ident                     (rule 46)

	L_ident        shift, and enter state 2

	Ident          goto state 89

State 59

	Expr6 -> 'true' .                                   (rule 24)

	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'&&'           reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'.'            reduce using rule 24
	'/'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'||'           reduce using rule 24


State 60

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 61

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 62

	MemberDef -> Type Ident '(' ListArg . ')' Block     (rule 15)

	')'            shift, and enter state 88


State 63

	Item -> Ident .                                     (rule 44)
	Item -> Ident . '=' Expr                            (rule 45)
	Item -> Ident . '=' 'new' Ident                     (rule 46)

	','            reduce using rule 44
	';'            reduce using rule 44
	'='            shift, and enter state 43


State 64

	ListItem -> Item ',' ListItem .                     (rule 48)

	';'            reduce using rule 48


State 65

	Expr6 -> Ident . '=' 'new' Ident                    (rule 18)
	Expr6 -> Ident .                                    (rule 22)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 26)
	Stmt -> Ident . '++' ';'                            (rule 36)
	Stmt -> Ident . '--' ';'                            (rule 37)
	Type -> Ident .                                     (rule 49)

	'!='           reduce using rule 22
	'%'            reduce using rule 22
	'&&'           reduce using rule 22
	'('            shift, and enter state 84
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	'++'           shift, and enter state 85
	'-'            reduce using rule 22
	'--'           shift, and enter state 86
	'.'            reduce using rule 22
	'/'            reduce using rule 22
	';'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'='            shift, and enter state 87
			(reduce using rule 22)

	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'||'           reduce using rule 22
	L_ident        reduce using rule 49


State 66

	Expr6 -> Expr6 . '.' Ident                          (rule 20)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 21)
	Stmt -> Expr6 . '=' Expr ';'                        (rule 35)
	Expr5 -> Expr6 .                                    (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'.'            shift, and enter state 82
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            shift, and enter state 83
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59


State 67

	Stmt -> Block .                                     (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 68

	ListStmt -> ListStmt Stmt .                         (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 69

	Stmt -> Type . ListItem ';'                         (rule 34)

	L_ident        shift, and enter state 2

	Ident          goto state 63
	Item           goto state 32
	ListItem       goto state 81

State 70

	Stmt -> Expr . ';'                                  (rule 43)

	';'            shift, and enter state 80


State 71

	Stmt -> ';' .                                       (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 72

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 40)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 41)

	'('            shift, and enter state 79


State 73

	Stmt -> 'return' . Expr ';'                         (rule 38)
	Stmt -> 'return' . ';'                              (rule 39)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 78
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 77

State 74

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 42)

	'('            shift, and enter state 76


State 75

	Block -> '{' ListStmt '}' .                         (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'class'        reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29
	%eof           reduce using rule 29


State 76

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 42)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 129

State 77

	Stmt -> 'return' Expr . ';'                         (rule 38)

	';'            shift, and enter state 128


State 78

	Stmt -> 'return' ';' .                              (rule 39)

	'!'            reduce using rule 39
	'('            reduce using rule 39
	'-'            reduce using rule 39
	';'            reduce using rule 39
	'boolean'      reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'return'       reduce using rule 39
	'string'       reduce using rule 39
	'true'         reduce using rule 39
	'void'         reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39


State 79

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 40)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 41)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 127

State 80

	Stmt -> Expr ';' .                                  (rule 43)

	'!'            reduce using rule 43
	'('            reduce using rule 43
	'-'            reduce using rule 43
	';'            reduce using rule 43
	'boolean'      reduce using rule 43
	'else'         reduce using rule 43
	'false'        reduce using rule 43
	'if'           reduce using rule 43
	'int'          reduce using rule 43
	'return'       reduce using rule 43
	'string'       reduce using rule 43
	'true'         reduce using rule 43
	'void'         reduce using rule 43
	'while'        reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	L_ident        reduce using rule 43
	L_integ        reduce using rule 43
	L_quoted       reduce using rule 43


State 81

	Stmt -> Type ListItem . ';'                         (rule 34)

	';'            shift, and enter state 126


State 82

	Expr6 -> Expr6 '.' . Ident                          (rule 20)
	Expr6 -> Expr6 '.' . Ident '(' ListExpr ')'         (rule 21)

	L_ident        shift, and enter state 2

	Ident          goto state 125

State 83

	Stmt -> Expr6 '=' . Expr ';'                        (rule 35)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 124

State 84

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 26)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	')'            reduce using rule 70
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 122
	ListExpr       goto state 123

State 85

	Stmt -> Ident '++' . ';'                            (rule 36)

	';'            shift, and enter state 121


State 86

	Stmt -> Ident '--' . ';'                            (rule 37)

	';'            shift, and enter state 120


State 87

	Expr6 -> Ident '=' . 'new' Ident                    (rule 18)

	'new'          shift, and enter state 119


State 88

	MemberDef -> Type Ident '(' ListArg ')' . Block     (rule 15)

	'{'            shift, and enter state 37

	Block          goto state 118

State 89

	Item -> Ident '=' 'new' Ident .                     (rule 46)

	','            reduce using rule 46
	';'            reduce using rule 46


State 90

	Expr6 -> Expr6 . '.' Ident                          (rule 20)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 21)
	Expr5 -> '-' Expr6 .                                (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'.'            shift, and enter state 82
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57


State 91

	Expr6 -> Ident . '=' 'new' Ident                    (rule 18)
	Expr6 -> Ident .                                    (rule 22)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 26)
	Type -> Ident .                                     (rule 49)

	'!='           reduce using rule 22
	'%'            reduce using rule 22
	'&&'           reduce using rule 22
	'('            shift, and enter state 84
	')'            reduce using rule 22
	')null'        reduce using rule 49
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'.'            reduce using rule 22
	'/'            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'='            shift, and enter state 87
	'=='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'||'           reduce using rule 22


State 92

	Expr6 -> '(' Type . ')null'                         (rule 19)

	')null'        shift, and enter state 117


State 93

	Expr6 -> '(' Expr . ')'                             (rule 28)

	')'            shift, and enter state 116


State 94

	Expr6 -> Expr6 . '.' Ident                          (rule 20)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 21)
	Expr5 -> '!' Expr6 .                                (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'.'            shift, and enter state 82
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58


State 95

	Expr -> Expr1 '||' . Expr                           (rule 68)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 115

State 96

	Expr2 -> Expr2 RelOp . Expr3                        (rule 64)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 114

State 97

	RelOp -> '!=' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'true'         reduce using rule 83
	L_ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 98

	Expr1 -> Expr2 '&&' . Expr1                         (rule 66)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 113

State 99

	RelOp -> '<' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	L_ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 100

	RelOp -> '<=' .                                     (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	L_ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 101

	RelOp -> '==' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'true'         reduce using rule 82
	L_ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 102

	RelOp -> '>' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'true'         reduce using rule 80
	L_ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 103

	RelOp -> '>=' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'true'         reduce using rule 81
	L_ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 104

	Expr3 -> Expr3 AddOp . Expr4                        (rule 62)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 112

State 105

	AddOp -> '+' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 106

	AddOp -> '-' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 107

	Expr4 -> Expr4 MulOp . Expr5                        (rule 60)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 111

State 108

	MulOp -> '%' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 109

	MulOp -> '*' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 110

	MulOp -> '/' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 111

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60


State 112

	Expr4 -> Expr4 . MulOp Expr5                        (rule 60)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 62)

	'!='           reduce using rule 62
	'%'            shift, and enter state 108
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            shift, and enter state 109
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            shift, and enter state 110
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62

	MulOp          goto state 107

State 113

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66
	'||'           reduce using rule 66


State 114

	Expr3 -> Expr3 . AddOp Expr4                        (rule 62)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 64)

	'!='           reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'+'            shift, and enter state 105
	','            reduce using rule 64
	'-'            shift, and enter state 106
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64

	AddOp          goto state 104

State 115

	Expr -> Expr1 '||' Expr .                           (rule 68)

	')'            reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68


State 116

	Expr6 -> '(' Expr ')' .                             (rule 28)

	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&&'           reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'.'            reduce using rule 28
	'/'            reduce using rule 28
	';'            reduce using rule 28
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'='            reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'||'           reduce using rule 28


State 117

	Expr6 -> '(' Type ')null' .                         (rule 19)

	'!='           reduce using rule 19
	'%'            reduce using rule 19
	'&&'           reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'+'            reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'.'            reduce using rule 19
	'/'            reduce using rule 19
	';'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'='            reduce using rule 19
	'=='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'||'           reduce using rule 19


State 118

	MemberDef -> Type Ident '(' ListArg ')' Block .     (rule 15)

	'boolean'      reduce using rule 15
	'int'          reduce using rule 15
	'string'       reduce using rule 15
	'void'         reduce using rule 15
	'}'            reduce using rule 15
	L_ident        reduce using rule 15


State 119

	Expr6 -> Ident '=' 'new' . Ident                    (rule 18)

	L_ident        shift, and enter state 2

	Ident          goto state 136

State 120

	Stmt -> Ident '--' ';' .                            (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'boolean'      reduce using rule 37
	'else'         reduce using rule 37
	'false'        reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'return'       reduce using rule 37
	'string'       reduce using rule 37
	'true'         reduce using rule 37
	'void'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 121

	Stmt -> Ident '++' ';' .                            (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'-'            reduce using rule 36
	';'            reduce using rule 36
	'boolean'      reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'return'       reduce using rule 36
	'string'       reduce using rule 36
	'true'         reduce using rule 36
	'void'         reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_ident        reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36


State 122

	ListExpr -> Expr .                                  (rule 71)
	ListExpr -> Expr . ',' ListExpr                     (rule 72)

	')'            reduce using rule 71
	','            shift, and enter state 135


State 123

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 26)

	')'            shift, and enter state 134


State 124

	Stmt -> Expr6 '=' Expr . ';'                        (rule 35)

	';'            shift, and enter state 133


State 125

	Expr6 -> Expr6 '.' Ident .                          (rule 20)
	Expr6 -> Expr6 '.' Ident . '(' ListExpr ')'         (rule 21)

	'!='           reduce using rule 20
	'%'            reduce using rule 20
	'&&'           reduce using rule 20
	'('            shift, and enter state 132
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	'.'            reduce using rule 20
	'/'            reduce using rule 20
	';'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'='            reduce using rule 20
	'=='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'||'           reduce using rule 20


State 126

	Stmt -> Type ListItem ';' .                         (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 127

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 40)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 41)

	')'            shift, and enter state 131


State 128

	Stmt -> 'return' Expr ';' .                         (rule 38)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'boolean'      reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'if'           reduce using rule 38
	'int'          reduce using rule 38
	'return'       reduce using rule 38
	'string'       reduce using rule 38
	'true'         reduce using rule 38
	'void'         reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38


State 129

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 42)

	')'            shift, and enter state 130


State 130

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 42)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 71
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'if'           shift, and enter state 72
	'int'          shift, and enter state 10
	'return'       shift, and enter state 73
	'string'       shift, and enter state 11
	'true'         shift, and enter state 59
	'void'         shift, and enter state 12
	'while'        shift, and enter state 74
	'{'            shift, and enter state 37
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 65
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 66
	Block          goto state 67
	Stmt           goto state 140
	Type           goto state 69
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 70

State 131

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 40)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 41)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 71
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'if'           shift, and enter state 72
	'int'          shift, and enter state 10
	'return'       shift, and enter state 73
	'string'       shift, and enter state 11
	'true'         shift, and enter state 59
	'void'         shift, and enter state 12
	'while'        shift, and enter state 74
	'{'            shift, and enter state 37
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 65
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 66
	Block          goto state 67
	Stmt           goto state 139
	Type           goto state 69
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 70

State 132

	Expr6 -> Expr6 '.' Ident '(' . ListExpr ')'         (rule 21)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	')'            reduce using rule 70
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 122
	ListExpr       goto state 138

State 133

	Stmt -> Expr6 '=' Expr ';' .                        (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'boolean'      reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'return'       reduce using rule 35
	'string'       reduce using rule 35
	'true'         reduce using rule 35
	'void'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


State 134

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 26)

	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'&&'           reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'.'            reduce using rule 26
	'/'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'='            reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'||'           reduce using rule 26


State 135

	ListExpr -> Expr ',' . ListExpr                     (rule 72)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	')'            reduce using rule 70
	'-'            shift, and enter state 56
	'false'        shift, and enter state 57
	'true'         shift, and enter state 59
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 47
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 122
	ListExpr       goto state 137

State 136

	Expr6 -> Ident '=' 'new' Ident .                    (rule 18)

	'!='           reduce using rule 18
	'%'            reduce using rule 18
	'&&'           reduce using rule 18
	')'            reduce using rule 18
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	','            reduce using rule 18
	'-'            reduce using rule 18
	'.'            reduce using rule 18
	'/'            reduce using rule 18
	';'            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'='            reduce using rule 18
	'=='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'||'           reduce using rule 18


State 137

	ListExpr -> Expr ',' ListExpr .                     (rule 72)

	')'            reduce using rule 72


State 138

	Expr6 -> Expr6 '.' Ident '(' ListExpr . ')'         (rule 21)

	')'            shift, and enter state 142


State 139

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 40)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 41)

	'!'            reduce using rule 40
	'('            reduce using rule 40
	'-'            reduce using rule 40
	';'            reduce using rule 40
	'boolean'      reduce using rule 40
	'else'         shift, and enter state 141
			(reduce using rule 40)

	'false'        reduce using rule 40
	'if'           reduce using rule 40
	'int'          reduce using rule 40
	'return'       reduce using rule 40
	'string'       reduce using rule 40
	'true'         reduce using rule 40
	'void'         reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40


State 140

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 42)

	'!'            reduce using rule 42
	'('            reduce using rule 42
	'-'            reduce using rule 42
	';'            reduce using rule 42
	'boolean'      reduce using rule 42
	'else'         reduce using rule 42
	'false'        reduce using rule 42
	'if'           reduce using rule 42
	'int'          reduce using rule 42
	'return'       reduce using rule 42
	'string'       reduce using rule 42
	'true'         reduce using rule 42
	'void'         reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	L_ident        reduce using rule 42
	L_integ        reduce using rule 42
	L_quoted       reduce using rule 42


State 141

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 41)

	'!'            shift, and enter state 54
	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	';'            shift, and enter state 71
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 57
	'if'           shift, and enter state 72
	'int'          shift, and enter state 10
	'return'       shift, and enter state 73
	'string'       shift, and enter state 11
	'true'         shift, and enter state 59
	'void'         shift, and enter state 12
	'while'        shift, and enter state 74
	'{'            shift, and enter state 37
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 60
	L_quoted       shift, and enter state 61

	Ident          goto state 65
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 66
	Block          goto state 67
	Stmt           goto state 143
	Type           goto state 69
	Expr5          goto state 48
	Expr4          goto state 49
	Expr3          goto state 50
	Expr2          goto state 51
	Expr1          goto state 52
	Expr           goto state 70

State 142

	Expr6 -> Expr6 '.' Ident '(' ListExpr ')' .         (rule 21)

	'!='           reduce using rule 21
	'%'            reduce using rule 21
	'&&'           reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'.'            reduce using rule 21
	'/'            reduce using rule 21
	';'            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'='            reduce using rule 21
	'=='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'||'           reduce using rule 21


State 143

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 41)

	'!'            reduce using rule 41
	'('            reduce using rule 41
	'-'            reduce using rule 41
	';'            reduce using rule 41
	'boolean'      reduce using rule 41
	'else'         reduce using rule 41
	'false'        reduce using rule 41
	'if'           reduce using rule 41
	'int'          reduce using rule 41
	'return'       reduce using rule 41
	'string'       reduce using rule 41
	'true'         reduce using rule 41
	'void'         reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 84
Number of terminals: 41
Number of non-terminals: 29
Number of states: 144
